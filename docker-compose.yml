version: '3.8'

networks:
  app-network:
    driver: bridge

services:
  db:
    image: postgres:13
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=aiasmr
      - POSTGRES_PASSWORD=aiasmr
      - POSTGRES_DB=aiasmr
      - POSTGRES_HOST_AUTH_METHOD=md5
      - POSTGRES_INITDB_ARGS=--auth-host=md5
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/pg_hba.conf:/etc/postgresql/pg_hba.conf
    command: >
      postgres
      -c listen_addresses='*'
      -c hba_file=/etc/postgresql/pg_hba.conf
      -c max_connections=100
      -c shared_buffers=128MB
      -c effective_cache_size=512MB
      -c maintenance_work_mem=128MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
      -c work_mem=8MB
      -c min_wal_size=1GB
      -c max_wal_size=4GB
      -c tcp_keepalives_idle=30
      -c tcp_keepalives_interval=10
      -c tcp_keepalives_count=5
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h localhost -U aiasmr -d aiasmr"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
    restart: always
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://aiasmr:aiasmr@db:5432/aiasmr
      - POSTGRES_USER=aiasmr
      - POSTGRES_PASSWORD=aiasmr
      - POSTGRES_DB=aiasmr
      # OpenAI Configuration
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-3.5-turbo}
      - OPENAI_MAX_TOKENS=${OPENAI_MAX_TOKENS:-150}
      - OPENAI_TEMPERATURE=${OPENAI_TEMPERATURE:-0.7}
      - OPENAI_PRESENCE_PENALTY=${OPENAI_PRESENCE_PENALTY:-0.0}
      - OPENAI_FREQUENCY_PENALTY=${OPENAI_FREQUENCY_PENALTY:-0.0}
      # ElevenLabs Configuration
      - ELEVENLABS_API_KEY=sk_2792a8284afc9f7dc914b91e4982fe1fd6f9cb8f969a7770
      - ELEVENLABS_VOICE_ID=tOuLUAIdXShmWH7PEUrU
      - ELEVENLABS_MODEL_ID=eleven_multilingual_v2
      - ELEVENLABS_OPTIMIZE_STREAMING=true
      - ELEVENLABS_STABILITY=0.75
      - ELEVENLABS_SIMILARITY_BOOST=0.75
      # JWT Settings
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-secret-key-here}
      - JWT_ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - REFRESH_TOKEN_EXPIRE_DAYS=7
      # Other Settings
      - DEBUG=true
      - API_V1_STR=/api/v1
      - PROJECT_NAME=AIASMR API
      - VERSION=1.0.0
      # Character Settings
      - DEFAULT_CHARACTER_NAME=${DEFAULT_CHARACTER_NAME:-Kafka}
      - DEFAULT_CHARACTER_DESCRIPTION=${DEFAULT_CHARACTER_DESCRIPTION:-"A mysterious woman who speaks in a gentle, soothing voice."}
      - DEFAULT_CHARACTER_PERSONALITY=${DEFAULT_CHARACTER_PERSONALITY:-"Gentle, mysterious, and caring. Speaks in a soft, calming manner suitable for ASMR."}
    volumes:
      - ./backend:/app/backend
      - ./backend/static:/app/static
      - ./backend/cache:/app/cache
    command: >
      /bin/sh -c "
        while ! nc -z db 5432; do
          echo 'Waiting for database to be ready...'
          sleep 1
        done
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "
    depends_on:
      - db
    restart: always
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/assets:/app/frontend/assets
      - ./backend/static:/app/static:ro
    depends_on:
      - backend
    networks:
      - app-network

volumes:
  postgres_data:
